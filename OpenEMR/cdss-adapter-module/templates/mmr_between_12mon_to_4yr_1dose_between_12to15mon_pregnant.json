{
   "library" : {
      "annotation" : [ {
         "translatorVersion" : "3.0.0-SNAPSHOT",
         "translatorOptions" : "",
         "type" : "CqlToElmInfo"
      }, {
         "libraryId" : "age_condition",
         "libraryVersion" : "1",
         "startLine" : 23,
         "startChar" : 24,
         "endLine" : 23,
         "endChar" : 28,
         "message" : "List-valued expression was demoted to a singleton.",
         "errorType" : "semantic",
         "errorSeverity" : "warning",
         "type" : "CqlToElmError"
      }, {
         "libraryId" : "age_condition",
         "libraryVersion" : "1",
         "startLine" : 23,
         "startChar" : 24,
         "endLine" : 23,
         "endChar" : 28,
         "message" : "List-valued expression was demoted to a singleton.",
         "errorType" : "semantic",
         "errorSeverity" : "warning",
         "type" : "CqlToElmError"
      }, {
         "libraryId" : "age_condition",
         "libraryVersion" : "1",
         "startLine" : 23,
         "startChar" : 58,
         "endLine" : 23,
         "endChar" : 62,
         "message" : "List-valued expression was demoted to a singleton.",
         "errorType" : "semantic",
         "errorSeverity" : "warning",
         "type" : "CqlToElmError"
      }, {
         "libraryId" : "age_condition",
         "libraryVersion" : "1",
         "startLine" : 23,
         "startChar" : 58,
         "endLine" : 23,
         "endChar" : 62,
         "message" : "List-valued expression was demoted to a singleton.",
         "errorType" : "semantic",
         "errorSeverity" : "warning",
         "type" : "CqlToElmError"
      } ],
      "identifier" : {
         "id" : "age_condition",
         "version" : "1"
      },
      "schemaIdentifier" : {
         "id" : "urn:hl7-org:elm",
         "version" : "r1"
      },
      "usings" : {
         "def" : [ {
            "localIdentifier" : "System",
            "uri" : "urn:hl7-org:elm-types:r1"
         }, {
            "localIdentifier" : "FHIR",
            "uri" : "http://hl7.org/fhir",
            "version" : "4.0.1"
         } ]
      },
      "includes" : {
         "def" : [ {
            "localIdentifier" : "FHIRHelpers",
            "path" : "FHIRHelpers",
            "version" : "4.0.1"
         } ]
      },
      "parameters" : {
         "def" : [ {
            "name" : "ConditionData",
            "accessLevel" : "Public",
            "parameterTypeSpecifier" : {
               "type" : "ListTypeSpecifier",
               "elementType" : {
                  "name" : "{http://hl7.org/fhir}Condition",
                  "type" : "NamedTypeSpecifier"
               }
            }
         } ]
      },
      "codeSystems" : {
         "def" : [ {
            "name" : "ICD10",
            "id" : "2.16.840.1.113883.6.90",
            "accessLevel" : "Public"
         } ]
      },
      "codes" : {
         "def" : [ {
            "name" : "pregnancy code",
            "id" : "Z34.90  ",
            "display" : "pregnancy",
            "accessLevel" : "Public",
            "codeSystem" : {
               "name" : "ICD10"
            }
         } ]
      },
      "contexts" : {
         "def" : [ {
            "name" : "Patient"
         } ]
      },
      "statements" : {
         "def" : [ {
            "name" : "ToCode",
            "context" : "Patient",
            "accessLevel" : "Public",
            "type" : "FunctionDef",
            "expression" : {
               "classType" : "{urn:hl7-org:elm-types:r1}Code",
               "type" : "Instance",
               "element" : [ {
                  "name" : "code",
                  "value" : {
                     "path" : "value",
                     "type" : "Property",
                     "source" : {
                        "path" : "code",
                        "type" : "Property",
                        "source" : {
                           "name" : "coding",
                           "type" : "OperandRef"
                        }
                     }
                  }
               }, {
                  "name" : "system",
                  "value" : {
                     "valueType" : "{urn:hl7-org:elm-types:r1}String",
                     "value" : "2.16.840.1.113883.6.90",
                     "type" : "Literal"
                  }
               }, {
                  "name" : "display",
                  "value" : {
                     "valueType" : "{urn:hl7-org:elm-types:r1}String",
                     "value" : "pregnancy",
                     "type" : "Literal"
                  }
               } ]
            },
            "operand" : [ {
               "name" : "coding",
               "operandTypeSpecifier" : {
                  "name" : "{http://hl7.org/fhir}Coding",
                  "type" : "NamedTypeSpecifier"
               }
            } ]
         }, {
            "name" : "Patient",
            "context" : "Patient",
            "expression" : {
               "type" : "SingletonFrom",
               "operand" : {
                  "dataType" : "{http://hl7.org/fhir}Patient",
                  "templateId" : "http://hl7.org/fhir/StructureDefinition/Patient",
                  "type" : "Retrieve"
               }
            }
         }, {
            "name" : "Name",
            "context" : "Patient",
            "accessLevel" : "Public",
            "expression" : {
               "type" : "Concatenate",
               "operand" : [ {
                  "type" : "Coalesce",
                  "operand" : [ {
                     "type" : "Concatenate",
                     "operand" : [ {
                        "type" : "Coalesce",
                        "operand" : [ {
                           "type" : "SingletonFrom",
                           "operand" : {
                              "type" : "Query",
                              "source" : [ {
                                 "alias" : "$this",
                                 "expression" : {
                                    "type" : "Flatten",
                                    "operand" : {
                                       "type" : "Query",
                                       "source" : [ {
                                          "alias" : "$this",
                                          "expression" : {
                                             "path" : "name",
                                             "type" : "Property",
                                             "source" : {
                                                "name" : "Patient",
                                                "type" : "ExpressionRef"
                                             }
                                          }
                                       } ],
                                       "where" : {
                                          "type" : "Not",
                                          "operand" : {
                                             "type" : "IsNull",
                                             "operand" : {
                                                "path" : "given",
                                                "type" : "Property",
                                                "source" : {
                                                   "name" : "$this",
                                                   "type" : "AliasRef"
                                                }
                                             }
                                          }
                                       },
                                       "return" : {
                                          "distinct" : false,
                                          "expression" : {
                                             "path" : "given",
                                             "type" : "Property",
                                             "source" : {
                                                "name" : "$this",
                                                "type" : "AliasRef"
                                             }
                                          }
                                       }
                                    }
                                 }
                              } ],
                              "where" : {
                                 "type" : "Not",
                                 "operand" : {
                                    "type" : "IsNull",
                                    "operand" : {
                                       "path" : "value",
                                       "type" : "Property",
                                       "source" : {
                                          "name" : "$this",
                                          "type" : "AliasRef"
                                       }
                                    }
                                 }
                              },
                              "return" : {
                                 "distinct" : false,
                                 "expression" : {
                                    "path" : "value",
                                    "type" : "Property",
                                    "source" : {
                                       "name" : "$this",
                                       "type" : "AliasRef"
                                    }
                                 }
                              }
                           }
                        }, {
                           "valueType" : "{urn:hl7-org:elm-types:r1}String",
                           "value" : "",
                           "type" : "Literal"
                        } ]
                     }, {
                        "type" : "Coalesce",
                        "operand" : [ {
                           "valueType" : "{urn:hl7-org:elm-types:r1}String",
                           "value" : " ",
                           "type" : "Literal"
                        }, {
                           "valueType" : "{urn:hl7-org:elm-types:r1}String",
                           "value" : "",
                           "type" : "Literal"
                        } ]
                     } ]
                  }, {
                     "valueType" : "{urn:hl7-org:elm-types:r1}String",
                     "value" : "",
                     "type" : "Literal"
                  } ]
               }, {
                  "type" : "Coalesce",
                  "operand" : [ {
                     "type" : "SingletonFrom",
                     "operand" : {
                        "type" : "Query",
                        "source" : [ {
                           "alias" : "$this",
                           "expression" : {
                              "type" : "Query",
                              "source" : [ {
                                 "alias" : "$this",
                                 "expression" : {
                                    "path" : "name",
                                    "type" : "Property",
                                    "source" : {
                                       "name" : "Patient",
                                       "type" : "ExpressionRef"
                                    }
                                 }
                              } ],
                              "where" : {
                                 "type" : "Not",
                                 "operand" : {
                                    "type" : "IsNull",
                                    "operand" : {
                                       "path" : "family",
                                       "type" : "Property",
                                       "source" : {
                                          "name" : "$this",
                                          "type" : "AliasRef"
                                       }
                                    }
                                 }
                              },
                              "return" : {
                                 "distinct" : false,
                                 "expression" : {
                                    "path" : "family",
                                    "type" : "Property",
                                    "source" : {
                                       "name" : "$this",
                                       "type" : "AliasRef"
                                    }
                                 }
                              }
                           }
                        } ],
                        "where" : {
                           "type" : "Not",
                           "operand" : {
                              "type" : "IsNull",
                              "operand" : {
                                 "path" : "value",
                                 "type" : "Property",
                                 "source" : {
                                    "name" : "$this",
                                    "type" : "AliasRef"
                                 }
                              }
                           }
                        },
                        "return" : {
                           "distinct" : false,
                           "expression" : {
                              "path" : "value",
                              "type" : "Property",
                              "source" : {
                                 "name" : "$this",
                                 "type" : "AliasRef"
                              }
                           }
                        }
                     }
                  }, {
                     "valueType" : "{urn:hl7-org:elm-types:r1}String",
                     "value" : "",
                     "type" : "Literal"
                  } ]
               } ]
            }
         }, {
            "name" : "Age",
            "context" : "Patient",
            "accessLevel" : "Public",
            "expression" : {
               "path" : "birthDate",
               "type" : "Property",
               "source" : {
                  "name" : "Patient",
                  "type" : "ExpressionRef"
               }
            }
         }, {
            "name" : "RuleName",
            "context" : "Patient",
            "accessLevel" : "Public",
            "expression" : {
               "valueType" : "{urn:hl7-org:elm-types:r1}String",
               "value" : "between_15yr_to_40yr_pregnant",
               "type" : "Literal"
            }
         }, {
            "name" : "Gender",
            "context" : "Patient",
            "accessLevel" : "Public",
            "expression" : {
               "path" : "gender",
               "type" : "Property",
               "source" : {
                  "name" : "Patient",
                  "type" : "ExpressionRef"
               }
            }
         }, {
            "name" : "Between 15 Yr and 40 Yr",
            "context" : "Patient",
            "accessLevel" : "Public",
            "expression" : {
               "type" : "And",
               "operand" : [ {
                  "type" : "GreaterOrEqual",
                  "operand" : [ {
                     "precision" : "Year",
                     "type" : "CalculateAge",
                     "operand" : {
                        "path" : "birthDate.value",
                        "type" : "Property",
                        "source" : {
                           "name" : "Patient",
                           "type" : "ExpressionRef"
                        }
                     }
                  }, {
                     "valueType" : "{urn:hl7-org:elm-types:r1}Integer",
                     "value" : "15",
                     "type" : "Literal"
                  } ]
               }, {
                  "type" : "LessOrEqual",
                  "operand" : [ {
                     "precision" : "Year",
                     "type" : "CalculateAge",
                     "operand" : {
                        "path" : "birthDate.value",
                        "type" : "Property",
                        "source" : {
                           "name" : "Patient",
                           "type" : "ExpressionRef"
                        }
                     }
                  }, {
                     "valueType" : "{urn:hl7-org:elm-types:r1}Integer",
                     "value" : "40",
                     "type" : "Literal"
                  } ]
               } ]
            }
         }, {
            "name" : "Is_Pregnant",
            "context" : "Patient",
            "accessLevel" : "Public",
            "expression" : {
               "type" : "Exists",
               "operand" : {
                  "type" : "Query",
                  "source" : [ {
                     "alias" : "C",
                     "expression" : {
                        "name" : "ConditionData",
                        "type" : "ParameterRef"
                     }
                  } ],
                  "relationship" : [ ],
                  "where" : {
                     "type" : "Equivalent",
                     "operand" : [ {
                        "name" : "ToCode",
                        "type" : "FunctionRef",
                        "operand" : [ {
                           "type" : "Indexer",
                           "operand" : [ {
                              "path" : "coding",
                              "type" : "Property",
                              "source" : {
                                 "path" : "code",
                                 "scope" : "C",
                                 "type" : "Property"
                              }
                           }, {
                              "valueType" : "{urn:hl7-org:elm-types:r1}Integer",
                              "value" : "0",
                              "type" : "Literal"
                           } ]
                        } ]
                     }, {
                        "name" : "pregnancy code",
                        "type" : "CodeRef"
                     } ]
                  }
               }
            }
         }, {
            "name" : "MeetsInclusionCriteria",
            "context" : "Patient",
            "accessLevel" : "Public",
            "expression" : {
               "type" : "And",
               "operand" : [ {
                  "name" : "Between 15 Yr and 40 Yr",
                  "type" : "ExpressionRef"
               }, {
                  "name" : "Is_Pregnant",
                  "type" : "ExpressionRef"
               } ]
            }
         }, {
            "name" : "InPopulation",
            "context" : "Patient",
            "accessLevel" : "Public",
            "expression" : {
               "name" : "MeetsInclusionCriteria",
               "type" : "ExpressionRef"
            }
         }, {
            "name" : "Recommendation",
            "context" : "Patient",
            "accessLevel" : "Public",
            "expression" : {
               "type" : "If",
               "condition" : {
                  "name" : "MeetsInclusionCriteria",
                  "type" : "ExpressionRef"
               },
               "then" : {
                  "valueType" : "{urn:hl7-org:elm-types:r1}String",
                  "value" : "Patient is pregnant and within the age range",
                  "type" : "Literal"
               },
               "else" : {
                  "valueType" : "{urn:hl7-org:elm-types:r1}String",
                  "value" : "Patient not in the age range or not pregnant",
                  "type" : "Literal"
               }
            }
         } ]
      }
   }
}

